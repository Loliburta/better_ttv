{"version":3,"sources":["utils/searchCategories.ts","utils/searchUsers.ts","components/navbar/queryResult/categoryItem/CategoryItem.tsx","hooks/useClickOutside.ts","components/navbar/queryResult/userItem/UserItem.tsx","components/navbar/Navbar.tsx","utils/getGames.ts","components/topGames/topGame/TopGame.tsx","components/topGames/TopGames.tsx","utils/getStreamers.ts","utils/getUser.ts","utils/readableDate.ts","components/channelInfo/ChannelInfo.tsx","components/topStreamers/topStream/TopStream.tsx","components/topStreamers/TopStreamers.tsx","components/home/Home.tsx","components/streamersForGame/StreamersForGame.tsx","components/liveStream/LiveStream.tsx","components/App.tsx","index.tsx"],"names":["searchCategories","query","cursor","a","url","fetch","method","headers","Headers","process","Authorization","res","console","log","json","result","searchUsers","CategoryItem","id","name","box_art_url","to","className","src","alt","useClickOutside","ref","setOpen","useEffect","handleClickOutside","event","current","contains","target","window","addEventListener","removeEventListener","UserItem","display_name","game_id","game_name","is_live","Navbar","useState","option","setOption","open","setCursor","setQuery","searchResult","setSearchResult","wrapperRef","useRef","debouncedSearch","useCallback","debounce","data","length","map","usr","cat","icon","twitchIcon","onClick","type","placeholder","onChange","e","value","handleChange","htmlFor","searchIcon","Grid","component","container","alignItems","spacing","item","Switch","checked","getGames","TopGame","replace","loading","TopGames","topGamesList","setTopGamesList","len","setLen","fetchGames","pagination","top","game","dataLength","next","hasMore","loader","endMessage","style","textAlign","getStreamers","gameId","getUser","user_id","readableDate","date","year","getFullYear","month","getMonth","day","getDay","ChannelInfo","setIcon","user","setUser","setDate","profile","Date","created_at","profileSVG","fetchUser","closeSVG","profile_image_url","broadcaster_type","view_count","description","TopStream","language","thumbnail_url","title","user_login","viewer_count","setProfile","fetchProfile","TopStreamers","GameId","useParams","topStreamersList","setTopStreamersList","fetchStreams","stream","Home","visibleGames","setVisibleGames","setVisiblePlayers","StreamersForGame","GameName","LiveStream","Name","channel","theme","width","height","muted","withChat","onVideoPause","App","exact","from","path","render","props","match","params","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6c6a0fa4.chunk.js","sourcesContent":["const clientId = process.env.REACT_APP_CLIENT_ID;\nconst oauthCode = process.env.REACT_APP_OAUTH_CODE;\n\nexport const searchCategories = async (query: string, cursor: string) => {\n  let url = `https://api.twitch.tv/helix/search/categories?query=${query}&first=40`;\n  if (cursor) {\n    url += `&after=${cursor}`;\n  }\n  const res = await fetch(url, {\n    method: \"GET\",\n    headers: new Headers({\n      \"Client-ID\": clientId!,\n      Authorization: `Bearer ${oauthCode}`,\n    }),\n  });\n  console.log(\"search categories\");\n  const result = await res.json();\n  return result;\n};\n","const clientId = process.env.REACT_APP_CLIENT_ID;\nconst oauthCode = process.env.REACT_APP_OAUTH_CODE;\n\nexport const searchUsers = async (query: string, cursor: string) => {\n  let url = `https://api.twitch.tv/helix/search/channels?query=${query}&first=40`;\n  if (cursor) {\n    url += `&after=${cursor}`;\n  }\n  const res = await fetch(url, {\n    method: \"GET\",\n    headers: new Headers({\n      \"Client-ID\": clientId!,\n      Authorization: `Bearer ${oauthCode}`,\n    }),\n  });\n  console.log(\"search users\");\n  const result = await res.json();\n  return result;\n};\n\n// {\n//     \"data\": [\n//       {\n//         \"broadcaster_language\": \"en\",\n//         \"broadcaster_login\": \"loserfruit\",\n//         \"display_name\": \"Loserfruit\",\n//         \"game_id\": \"498000\",\n//         \"game_name\": \"House Flipper\",\n//         \"id\": \"41245072\",\n//         \"is_live\": false,\n//         \"tags_ids\": [],\n//         \"thumbnail_url\": \"https://static-cdn.jtvnw.net/jtv_user_pictures/fd17325a-7dc2-46c6-8617-e90ec259501c-profile_image-300x300.png\",\n//         \"title\": \"loserfruit\",\n//         \"started_at\": \"\"\n//       },\n//   ... ],\n//     \"pagination\": {\n//       \"cursor\": \"Mg==\"\n//     }\n//   }\n","import { Link } from \"react-router-dom\";\n\nexport interface CategoryItemProps {\n  id: string;\n  name: string;\n  box_art_url: string;\n}\nexport const CategoryItem: React.FC<CategoryItemProps> = ({\n  id,\n  name,\n  box_art_url,\n}) => {\n  return (\n    <>\n      {/* redirect is for infinite scroll to update instead of adding items to the end */}\n      <Link to={`${process.env.PUBLIC_URL}/redirect/${name}/${id}`}>\n        <div className=\"categoryItems__item\">\n          <img\n            className=\"categoryItems__item__img\"\n            src={box_art_url}\n            alt=\"Category\"\n          />\n          <div className=\"categoryItems__item__name\">{name}</div>\n        </div>\n      </Link>\n    </>\n  );\n};\n","import { useEffect } from \"react\";\nexport const useClickOutside = (\n  ref: React.MutableRefObject<any>,\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>\n) => {\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent | TouchEvent) => {\n      if (ref.current && !ref.current.contains(event.target)) {\n        setOpen(false);\n      }\n    };\n    window.addEventListener(\"mousedown\", handleClickOutside);\n    window.addEventListener(\"touchstart\", handleClickOutside);\n    return () => {\n      window.removeEventListener(\"mousedown\", handleClickOutside);\n      window.removeEventListener(\"touchstart\", handleClickOutside);\n    };\n  }, [ref, setOpen]);\n};\n","export interface UserItemProps {\n  display_name: string;\n  game_id: string;\n  game_name: string;\n  id: string;\n  is_live: boolean;\n}\nexport const UserItem: React.FC<UserItemProps> = ({\n  display_name,\n  game_id,\n  game_name,\n  id,\n  is_live,\n}) => {\n  return (\n    <div>\n      <div>{display_name}</div>\n    </div>\n  );\n};\n\n// {\n//     \"data\": [\n//       {\n//         \"broadcaster_language\": \"en\",\n//         \"broadcaster_login\": \"loserfruit\",\n//         \"display_name\": \"Loserfruit\",\n//         \"game_id\": \"498000\",\n//         \"game_name\": \"House Flipper\",\n//         \"id\": \"41245072\",\n//         \"is_live\": false,\n//         \"tags_ids\": [],\n//         \"thumbnail_url\": \"https://static-cdn.jtvnw.net/jtv_user_pictures/fd17325a-7dc2-46c6-8617-e90ec259501c-profile_image-300x300.png\",\n//         \"title\": \"loserfruit\",\n//         \"started_at\": \"\"\n//       },\n//   ... ],\n//     \"pagination\": {\n//       \"cursor\": \"Mg==\"\n//     }\n//   }\n","import { useState, useEffect, useCallback, useRef } from \"react\";\nimport { searchCategories } from \"../../utils/searchCategories\";\nimport { searchUsers } from \"../../utils/searchUsers\";\nimport { debounce } from \"lodash\";\nimport { Link } from \"react-router-dom\";\nimport { Icon } from \"@iconify/react\";\nimport searchIcon from \"@iconify-icons/akar-icons/search\";\nimport twitchIcon from \"@iconify-icons/bi/twitch\";\nimport {\n  CategoryItem,\n  CategoryItemProps as CategoryItemTypes,\n} from \"./queryResult/categoryItem/CategoryItem\";\nimport { useClickOutside } from \"../../hooks/useClickOutside\";\nimport {\n  UserItem,\n  UserItemProps as UserItemTypes,\n} from \"./queryResult/userItem/UserItem\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Grid from \"@material-ui/core/Grid\";\n\nexport const Navbar = () => {\n  const [option, setOption] = useState(false);\n\n  const [open, setOpen] = useState(true);\n  const [cursor, setCursor] = useState(\"\");\n  const [query, setQuery] = useState(\"\");\n  const [searchResult, setSearchResult] = useState<any>(null);\n  const wrapperRef = useRef(null);\n  useClickOutside(wrapperRef, setOpen);\n\n  useEffect(() => {\n    if (!open) {\n      setSearchResult(null);\n      setQuery(\"\");\n    }\n  }, [open]);\n\n  const handleChange = (e: React.ChangeEvent<any>) => {\n    setQuery(e.target.value);\n    if (cursor !== \"\") {\n      setCursor(\"\");\n    }\n  };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const debouncedSearch = useCallback(\n    debounce(async (query: string, cursor: string, option: boolean) => {\n      setSearchResult(null);\n      let res = { data: [] };\n      if (query.length > 0 && option === true) {\n        res = await searchUsers(query, cursor);\n        if (res?.data?.length > 0) {\n          setSearchResult(\n            <div className={open ? \"userItems\" : \"userItems--closed\"}>\n              {res.data.map((usr: UserItemTypes) => {\n                return (\n                  <UserItem\n                    key={usr.id}\n                    id={usr.id}\n                    display_name={usr.display_name}\n                    game_name={usr.game_name}\n                    game_id={usr.game_id}\n                    is_live={usr.is_live}\n                  />\n                );\n              })}\n            </div>\n          );\n        }\n      } else if (query.length > 0) {\n        res = await searchCategories(query, cursor);\n        if (res?.data?.length > 0) {\n          setSearchResult(\n            <div className={open ? \"categoryItems\" : \"categoryItems--closed\"}>\n              {res.data.map((cat: CategoryItemTypes) => {\n                return (\n                  <CategoryItem\n                    key={cat.id}\n                    id={cat.id}\n                    name={cat.name}\n                    box_art_url={cat.box_art_url}\n                  />\n                );\n              })}\n            </div>\n          );\n        }\n      }\n    }, 500),\n    []\n  );\n  useEffect(() => {\n    debouncedSearch(query, cursor, option);\n  }, [query, cursor, debouncedSearch, option]);\n  return (\n    <div className=\"navbar\">\n      <Link className=\"navbar__twitch\" to={`${process.env.PUBLIC_URL}/`}>\n        <Icon icon={twitchIcon} />\n      </Link>\n      <div className=\"navbar__search\">\n        <div className=\"navbar__search__mid\" ref={wrapperRef}>\n          <div\n            className=\"navbar__search__mid__searchDiv\"\n            onClick={() => setOpen(true)}\n          >\n            <input\n              type=\"text\"\n              className=\"navbar__search__mid__searchDiv__input\"\n              placeholder=\"Search\"\n              onChange={(e) => handleChange(e)}\n              value={query}\n              id=\"input\"\n            ></input>\n\n            <label htmlFor=\"input\">\n              <div className=\"navbar__search__mid__searchDiv__icon\">\n                <Icon\n                  icon={searchIcon}\n                  className=\"navbar__search__mid__searchDiv__icon__svg\"\n                />\n              </div>\n            </label>\n          </div>\n          {searchResult ? searchResult : \"\"}\n        </div>\n        <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\n          <Grid item>Category</Grid>\n          <Grid item>\n            <Switch checked={option} onChange={() => setOption(!option)} />\n          </Grid>\n          <Grid item>User</Grid>\n        </Grid>\n      </div>\n    </div>\n  );\n};\n\n\n","const clientId = process.env.REACT_APP_CLIENT_ID;\nconst oauthCode = process.env.REACT_APP_OAUTH_CODE;\nexport const getGames = async (cursor: string) => {\n  let url = \"https://api.twitch.tv/helix/games/top?first=100\";\n  if (cursor) {\n    url = `${url}&after=${cursor}`;\n  }\n  const res = await fetch(url, {\n    method: \"GET\",\n    headers: new Headers({\n      \"Client-ID\": clientId!,\n      Authorization: `Bearer ${oauthCode}`,\n    }),\n  });\n  const result = await res.json();\n  return result;\n};\n","import { Link } from \"react-router-dom\";\ninterface Props {\n  id: string;\n  name: string;\n  box_art_url: string;\n}\nexport const TopGame: React.FC<Props> = ({ id, name, box_art_url }) => {\n  const url = box_art_url.replace(\"{width}\", \"220\").replace(\"{height}\", \"325\");\n  return (\n    <div className=\"topGames__game\">\n      <Link to={`${process.env.PUBLIC_URL}/StreamersForGame/${name}/${id}`}>\n        <img\n          src={url}\n          loading=\"lazy\"\n          alt=\"game\"\n          className=\"topGames__game__img\"\n        />\n      </Link>\n      <div className=\"topGames__game__name\">\n        <Link to={`${process.env.PUBLIC_URL}/StreamersForGame/${name}/${id}`}>\n          <p className=\"topGames__game__name__text\">{name}</p>\n        </Link>\n      </div>\n    </div>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { getGames } from \"../../utils/getGames\";\nimport { TopGame } from \"./topGame/TopGame\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nexport const TopGames = () => {\n  const [topGamesList, setTopGamesList] = useState<any>([]);\n  const [cursor, setCursor] = useState(\"\");\n  const [len, setLen] = useState(0);\n  const fetchGames = async () => {\n    let res = await getGames(cursor);\n    setCursor(await res.pagination.cursor);\n    let top = await res.data;\n    setLen(len + top.length);\n    setTopGamesList([\n      ...topGamesList,\n      top.map((game: { id: string; name: string; box_art_url: string }) => {\n        return (\n          <TopGame\n            key={game.id}\n            id={game.id}\n            name={game.name}\n            box_art_url={game.box_art_url}\n          />\n        );\n      }),\n    ]);\n    return topGamesList;\n  };\n  useEffect(() => {\n    fetchGames();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      <InfiniteScroll\n        className=\"topGames\"\n        dataLength={len}\n        next={fetchGames}\n        hasMore={true}\n        loader={<h4>Loading...</h4>}\n        endMessage={\n          <p style={{ textAlign: \"center\" }}>\n            <b>Yay! You have seen it all</b>\n          </p>\n        }\n      >\n        {topGamesList}\n      </InfiniteScroll>\n    </>\n  );\n};\n","const clientId = process.env.REACT_APP_CLIENT_ID;\nconst oauthCode = process.env.REACT_APP_OAUTH_CODE;\n\nexport const getStreamers = async (cursor: string, gameId?: string) => {\n  let url = \"https://api.twitch.tv/helix/streams?first=40\";\n  if (cursor) {\n    url = \"https://api.twitch.tv/helix/streams?first=70\";\n    url += `&after=${cursor}`;\n  }\n  if (gameId) {\n    url += `&game_id=${gameId}`;\n  }\n  const res = await fetch(url, {\n    method: \"GET\",\n    headers: new Headers({\n      \"Client-ID\": clientId!,\n      Authorization: `Bearer ${oauthCode}`,\n    }),\n  });\n  const result = await res.json();\n  return result;\n};\n","const clientId = process.env.REACT_APP_CLIENT_ID;\nconst oauthCode = process.env.REACT_APP_OAUTH_CODE;\n\nexport const getUser = async (user_id: string) => {\n  let url = `https://api.twitch.tv/helix/users?id=${user_id}`;\n  const res = await fetch(url, {\n    method: \"GET\",\n    headers: new Headers({\n      \"Client-ID\": clientId!,\n      Authorization: `Bearer ${oauthCode}`,\n    }),\n  });\n  const result = await res.json();\n  return result.data[0];\n};\n","export const readableDate = (date: Date): string => {\n  const monthNames = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n  const year = date.getFullYear();\n  const month = monthNames[date.getMonth()];\n  const day = date.getDay();\n  return `Joined ${day === 0 ? 1 : day} ${month} ${year}`;\n};\n","import { useState, useEffect, useRef } from \"react\";\nimport { getUser } from \"../../utils/getUser\";\nimport { readableDate } from \"../../utils/readableDate\";\nimport { useClickOutside } from \"../../hooks/useClickOutside\";\nimport { Icon } from \"@iconify/react\";\nimport profileSVG from \"@iconify-icons/ant-design/profile-outlined\";\nimport closeSVG from \"@iconify-icons/bi/x-lg\";\n\ninterface Props {\n  user_id: string;\n}\nexport const ChannelInfo: React.FC<Props> = ({ user_id }) => {\n  const [open, setOpen] = useState(false);\n  const [icon, setIcon] = useState<JSX.Element | null>(null);\n  const [user, setUser] = useState<any>({});\n  const [date, setDate] = useState(\"\");\n  const profile = useRef(null);\n  useEffect(() => {\n    const fetchUser = async () => {\n      const res = await getUser(user_id);\n      setUser(res);\n      setDate(readableDate(new Date(res.created_at)));\n      setOpen(true);\n      setIcon(<Icon className=\"profileIcon__svg\" icon={profileSVG} />);\n    };\n    fetchUser();\n  }, [user_id]);\n  useClickOutside(profile, setOpen);\n\n  return (\n    <>\n      {open ? (\n        <div\n          className={open ? \"channelInfo\" : \"channelInfo--closed\"}\n          ref={profile}\n        >\n          <div className=\"channelInfo__close\" onClick={() => setOpen(false)}>\n            <Icon className=\"channelInfo__close__svg\" icon={closeSVG} />\n          </div>\n          <div className=\"channelInfo__top\">\n            <div className=\"channelInfo__top__image\">\n              <img\n                className=\"channelInfo__top__image__img\"\n                src={user.profile_image_url}\n                alt=\"profile\"\n              />\n            </div>\n            <div className=\"channelInfo__top__info\">\n              <div className=\"channelInfo__top__info__name\">\n                {user.display_name}\n              </div>\n              <div className=\"channelInfo__top__info__type\">\n                {user.broadcaster_type}\n              </div>\n              <div className=\"channelInfo__top__info__views\">\n                {user.view_count} views\n              </div>\n              <div className=\"channelInfo__top__info__created\">{date}</div>\n            </div>\n          </div>\n          <div className=\"channelInfo__description\">\n            <div className=\"\">{user.description}</div>\n          </div>\n        </div>\n      ) : (\n        <div\n          className={open ? \"profileIcon--closed\" : \"profileIcon\"}\n          onClick={() => setOpen(true)}\n        >\n          {icon}\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ChannelInfo } from \"../../channelInfo/ChannelInfo\";\n\ninterface Props {\n  game_name: string;\n  language: string;\n  thumbnail_url: string;\n  title: string;\n  user_login: string;\n  viewer_count: number;\n  user_id: string;\n}\nexport const TopStream: React.FC<Props> = ({\n  game_name,\n  language,\n  thumbnail_url,\n  title,\n  user_login,\n  viewer_count,\n  user_id,\n}) => {\n  const [profile, setProfile] = useState<any>();\n  const fetchProfile = async () => {\n    if (!profile) {\n      setProfile(<ChannelInfo user_id={user_id} />);\n    }\n  };\n  const url = thumbnail_url\n    .replace(\"{width}\", \"450\")\n    .replace(\"{height}\", \"254\");\n  return (\n    <>\n      <div className=\"topStreamers__stream\">\n        {profile ? profile : \"\"}\n\n        <Link to={`${process.env.PUBLIC_URL}/Streamer/${user_login}`}>\n          <div className=\"topStreamers__stream__thumbnail\">\n            <img\n              className=\"topStreamers__stream__thumbnail__img\"\n              src={url}\n              loading=\"lazy\"\n              alt=\"thumbnail\"\n            />\n            <div className=\"topStreamers__stream__thumbnail__count\">\n              {viewer_count} widzów\n            </div>\n          </div>\n        </Link>\n        <div className=\"topStreamers__stream__info\">\n          <div className=\"topStreamers__stream__info__title\">{title}</div>\n          <div className=\"topStreamers__stream__info__username\">\n            <p\n              onClick={fetchProfile}\n              className=\"topStreamers__stream__info__username__text\"\n            >\n              {user_login}\n            </p>\n          </div>\n          <div className=\"topStreamers__stream__info__game\">{game_name}</div>\n          <div>{language}</div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { getStreamers } from \"../../utils/getStreamers\";\nimport { TopStream } from \"./topStream/TopStream\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { useParams } from \"react-router-dom\";\n\ninterface streamProps {\n  game_name: string;\n  language: string;\n  thumbnail_url: string;\n  title: string;\n  user_login: string;\n  viewer_count: number;\n  user_id: string;\n}\ninterface ParamTypes {\n  GameName: string;\n  GameId: string;\n}\nexport const TopStreamers = () => {\n  const { GameId } = useParams<ParamTypes>();\n\n  const [cursor, setCursor] = useState(\"\");\n  const [len, setLen] = useState(0);\n  const [topStreamersList, setTopStreamersList] = useState<any>([]);\n  let fetchStreams = async () => {\n    let res = await getStreamers(cursor, GameId);\n    console.log(await res);\n    setCursor(await res.pagination.cursor);\n    let top = await res.data;\n    setLen(len + top.length);\n    setTopStreamersList([\n      ...topStreamersList,\n      top.map((stream: streamProps) => {\n        return (\n          <TopStream\n            key={stream.user_login}\n            game_name={stream.game_name}\n            language={stream.language}\n            thumbnail_url={stream.thumbnail_url}\n            title={stream.title}\n            user_login={stream.user_login}\n            viewer_count={stream.viewer_count}\n            user_id={stream.user_id}\n          />\n        );\n      }),\n    ]);\n  };\n  useEffect(() => {\n    fetchStreams();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return (\n    <>\n      <InfiniteScroll\n        className=\"topStreamers\"\n        dataLength={len}\n        next={fetchStreams}\n        hasMore={true}\n        loader={<h4>Loading...</h4>}\n        endMessage={\n          <p style={{ textAlign: \"center\" }}>\n            <b>Yay! You have seen it all</b>\n          </p>\n        }\n      >\n        {topStreamersList}\n      </InfiniteScroll>\n    </>\n  );\n};\n","import { useState } from \"react\";\nimport { TopGames } from \"../topGames/TopGames\";\nimport { TopStreamers } from \"../topStreamers/TopStreamers\";\n\nexport const Home = () => {\n  const [visibleGames, setVisibleGames] = useState(true);\n  const [, setVisiblePlayers] = useState(false);\n  const handleClickGames = () => {\n    setVisiblePlayers(false);\n    setVisibleGames(true);\n  };\n  const handleClickPlayers = () => {\n    setVisibleGames(false);\n    setVisiblePlayers(true);\n  };\n  return (\n    <div>\n      <div className=\"button\">\n        <div className=\"button__option\" onClick={handleClickGames}>\n          Kategorie\n        </div>\n        <div className=\"button__option\" onClick={handleClickPlayers}>\n          Kanały na żywo\n        </div>\n      </div>\n      {visibleGames ? <TopGames /> : <TopStreamers />}\n    </div>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { getStreamers } from \"../../utils/getStreamers\";\nimport { TopStream } from \"../topStreamers/topStream/TopStream\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { useParams } from \"react-router-dom\";\n\ninterface streamProps {\n  game_name: string;\n  language: string;\n  thumbnail_url: string;\n  title: string;\n  user_login: string;\n  viewer_count: number;\n  user_id: string;\n}\ninterface ParamTypes {\n  GameName: string;\n  GameId: string;\n}\nexport const StreamersForGame = () => {\n  const { GameName, GameId } = useParams<ParamTypes>();\n\n  const [cursor, setCursor] = useState(\"\");\n  const [len, setLen] = useState(0);\n  const [topStreamersList, setTopStreamersList] = useState<any>([]);\n  let fetchStreams = async () => {\n    let res = await getStreamers(cursor, GameId);\n    setCursor(await res.pagination.cursor);\n    let top = await res.data;\n    console.log(\"called specific game streams api\");\n    setLen(len + top.length);\n    setTopStreamersList([\n      ...topStreamersList,\n      top.map((stream: streamProps) => {\n        return (\n          <TopStream\n            key={stream.user_login}\n            game_name={stream.game_name}\n            language={stream.language}\n            thumbnail_url={stream.thumbnail_url}\n            title={stream.title}\n            user_login={stream.user_login}\n            viewer_count={stream.viewer_count}\n            user_id={stream.user_id}\n          />\n        );\n      }),\n    ]);\n  };\n  useEffect(() => {\n    fetchStreams();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return (\n    <>\n      <div className=\"gameName\">{GameName}</div>\n      <InfiniteScroll\n        className=\"topStreamers\"\n        dataLength={len}\n        next={fetchStreams}\n        hasMore={true}\n        loader={<h4>Loading...</h4>}\n        endMessage={\n          <p style={{ textAlign: \"center\" }}>\n            <b>Yay! You have seen it all</b>\n          </p>\n        }\n      >\n        {topStreamersList}\n      </InfiniteScroll>\n    </>\n  );\n};\n","import { useParams } from \"react-router-dom\";\nimport { TwitchEmbed } from \"react-twitch-embed\";\ninterface ParamTypes {\n  Name: string;\n}\nexport const LiveStream = () => {\n  const { Name } = useParams<ParamTypes>();\n  return (\n    <div className=\"streamWrapper\">\n      <div className=\"twitchEmbed\">\n        <TwitchEmbed\n          id=\"twitchEmbed\"\n          channel={Name}\n          theme=\"dark\"\n          width=\"100%\"\n          height=\"100%\"\n          muted\n          withChat={false}\n          onVideoPause={() => console.log(\":(\")}\n        />\n      </div>\n    </div>\n  );\n};\n","import { Navbar } from \"./navbar/Navbar\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport { Home } from \"./home/Home\";\nimport { StreamersForGame } from \"./streamersForGame/StreamersForGame\";\nimport { LiveStream } from \"./liveStream/LiveStream\";\n\nexport const App = () => {\n  return (\n    <Router>\n      <div>\n        <Navbar />\n        <Switch>\n          <Redirect exact from=\"/\" to={`${process.env.PUBLIC_URL}/`} />\n          <Route path={`${process.env.PUBLIC_URL}/`} exact>\n            <Home />\n          </Route>\n          <Route\n            path={`${process.env.PUBLIC_URL}/StreamersForGame/:GameName/:GameId`}\n          >\n            <StreamersForGame />\n          </Route>\n          <Route\n            exact\n            path={`${process.env.PUBLIC_URL}/redirect/:GameName/:GameId`}\n            render={(props) => (\n              <Redirect\n                to={`${process.env.PUBLIC_URL}/StreamersForGame/${props.match.params.GameName}/${props.match.params.GameId}`}\n              />\n            )}\n          />\n          <Route path={`${process.env.PUBLIC_URL}/Streamer/:Name`}>\n            <LiveStream />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport {App} from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}