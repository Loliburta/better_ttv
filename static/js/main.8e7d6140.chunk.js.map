{"version":3,"sources":["components/navbar/Navbar.tsx","utils/getGames.ts","components/topGames/topGame/TopGame.tsx","components/topGames/TopGames.tsx","utils/getStreamers.ts","utils/getUser.ts","utils/readableDate.ts","components/channelInfo/ChannelInfo.tsx","hooks/useClickOutside.ts","components/topStreamers/topStream/TopStream.tsx","components/topStreamers/TopStreamers.tsx","components/home/Home.tsx","components/streamersForGame/StreamersForGame.tsx","components/liveStream/LiveStream.tsx","components/App.tsx","index.tsx"],"names":["Navbar","className","to","process","icon","twitchIcon","type","placeholder","searchIcon","getGames","cursor","a","url","fetch","method","headers","Headers","Authorization","res","json","result","console","log","TopGame","id","name","box_art_url","replace","src","loading","alt","TopGames","useState","topGamesList","setTopGamesList","setCursor","len","setLen","fetchGames","pagination","data","top","length","map","game","useEffect","dataLength","next","hasMore","loader","endMessage","style","textAlign","getStreamers","gameId","getUser","user_id","readableDate","date","year","getFullYear","month","getMonth","day","getDay","ChannelInfo","open","setOpen","setIcon","user","setUser","setDate","profile","useRef","Date","created_at","profileSVG","fetchUser","ref","handleClickOutside","event","current","contains","target","window","addEventListener","removeEventListener","useClickOutside","profile_image_url","display_name","broadcaster_type","view_count","description","onClick","TopStream","game_name","language","thumbnail_url","title","user_login","viewer_count","setProfile","fetchProfile","TopStreamers","useParams","GameName","GameId","topStreamersList","setTopStreamersList","fetchStreams","stream","Home","visibleGames","setVisibleGames","setVisiblePlayers","StreamersForGame","LiveStream","Name","channel","theme","width","height","muted","withChat","onVideoPause","App","exact","from","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e7d6140.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\nimport { Icon } from \"@iconify/react\";\nimport searchIcon from \"@iconify-icons/akar-icons/search\";\nimport twitchIcon from \"@iconify-icons/bi/twitch\";\nexport const Navbar = () => {\n  return (\n    <div className=\"navbar\">\n      <Link className=\"navbar__twitch\" to={`${process.env.PUBLIC_URL}/`}>\n        <Icon icon={twitchIcon} />\n      </Link>\n      <div className=\"navbar__searchDiv\">\n        <input\n          type=\"text\"\n          className=\"navbar__searchDiv__search\"\n          placeholder=\"Search\"\n        ></input>\n        <div className=\"navbar__searchDiv__icon\">\n          <Icon icon={searchIcon} className=\"navbar__searchDiv__icon__svg\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n","const clientId = process.env.REACT_APP_CLIENT_ID;\nconst oauthCode = process.env.REACT_APP_OAUTH_CODE;\nexport const getGames = async (cursor: string) => {\n  let url = \"https://api.twitch.tv/helix/games/top?first=100\";\n  if (cursor) {\n    url = `${url}&after=${cursor}`;\n  }\n  const res = await fetch(url, {\n    method: \"GET\",\n    headers: new Headers({\n      \"Client-ID\": clientId!,\n      Authorization: `Bearer ${oauthCode}`,\n    }),\n  });\n  const result = await res.json();\n  console.log(result);\n\n  return result;\n};\n","import { Link } from \"react-router-dom\";\ninterface Props {\n  id: string;\n  name: string;\n  box_art_url: string;\n}\nexport const TopGame: React.FC<Props> = ({ id, name, box_art_url }) => {\n  const url = box_art_url.replace(\"{width}\", \"220\").replace(\"{height}\", \"325\");\n  return (\n    <div className=\"topGames__game\">\n      <Link to={`${process.env.PUBLIC_URL}/StreamersForGame/${name}/${id}`}>\n        <img\n          src={url}\n          loading=\"lazy\"\n          alt=\"game\"\n          className=\"topGames__game__img\"\n        />\n      </Link>\n      <div className=\"topGames__game__name\">\n        <Link to={`${process.env.PUBLIC_URL}/StreamersForGame/${name}/${id}`}>\n          <p className=\"topGames__game__name__text\">{name}</p>\n        </Link>\n      </div>\n    </div>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { getGames } from \"../../utils/getGames\";\nimport { TopGame } from \"./topGame/TopGame\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nexport const TopGames = () => {\n  const [topGamesList, setTopGamesList] = useState<any>([]);\n  const [cursor, setCursor] = useState(\"\");\n  const [len, setLen] = useState(0);\n  const fetchGames = async () => {\n    let res = await getGames(cursor);\n    setCursor(await res.pagination.cursor);\n    let top = await res.data;\n    setLen(len + top.length);\n    setTopGamesList([\n      ...topGamesList,\n      top.map((game: { id: string; name: string; box_art_url: string }) => {\n        return (\n          <TopGame\n            key={game.id}\n            id={game.id}\n            name={game.name}\n            box_art_url={game.box_art_url}\n          />\n        );\n      }),\n    ]);\n    return topGamesList;\n  };\n  useEffect(() => {\n    fetchGames();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      <InfiniteScroll\n        className=\"topGames\"\n        dataLength={len}\n        next={fetchGames}\n        hasMore={true}\n        loader={<h4>Loading...</h4>}\n        endMessage={\n          <p style={{ textAlign: \"center\" }}>\n            <b>Yay! You have seen it all</b>\n          </p>\n        }\n      >\n        {topGamesList}\n      </InfiniteScroll>\n    </>\n  );\n};\n","const clientId = process.env.REACT_APP_CLIENT_ID;\nconst oauthCode = process.env.REACT_APP_OAUTH_CODE;\n\nexport const getStreamers = async (cursor: string, gameId?: string) => {\n  let url = \"https://api.twitch.tv/helix/streams?first=40\";\n  if (cursor) {\n    url = \"https://api.twitch.tv/helix/streams?first=70\"\n    url += `&after=${cursor}`;\n  }\n  if (gameId) {\n    url += `&game_id=${gameId}`;\n  }\n  const res = await fetch(url, {\n    method: \"GET\",\n    headers: new Headers({\n      \"Client-ID\": clientId!,\n      Authorization: `Bearer ${oauthCode}`,\n    }),\n  });\n  console.log(\"streamers\")\n  const result = await res.json();\n  return result;\n};\n","const clientId = process.env.REACT_APP_CLIENT_ID;\nconst oauthCode = process.env.REACT_APP_OAUTH_CODE;\n\nexport const getUser = async (user_id: string) => {\n  let url = `https://api.twitch.tv/helix/users?id=${user_id}`;\n  const res = await fetch(url, {\n    method: \"GET\",\n    headers: new Headers({\n      \"Client-ID\": clientId!,\n      Authorization: `Bearer ${oauthCode}`,\n    }),\n  });\n  console.log(\"user\");\n  const result = await res.json();\n  console.log(result.data[0]);\n  return result.data[0];\n};\n","export const readableDate = (date: Date): string => {\n  const monthNames = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n  const year = date.getFullYear();\n  const month = monthNames[date.getMonth()];\n  const day = date.getDay();\n  return `Joined ${day === 0 ? 1 : day} ${month} ${year}`;\n};\n","import { useState, useEffect, useRef } from \"react\";\nimport { getUser } from \"../../utils/getUser\";\nimport { readableDate } from \"../../utils/readableDate\";\nimport { useClickOutside } from \"../../hooks/useClickOutside\";\nimport { Icon } from \"@iconify/react\";\nimport profileSVG from \"@iconify-icons/ant-design/profile-outlined\";\n\ninterface Props {\n  user_id: string;\n}\nexport const ChannelInfo: React.FC<Props> = ({ user_id }) => {\n  const [open, setOpen] = useState(false);\n  const [icon, setIcon] = useState<JSX.Element | null>(null);\n  const [user, setUser] = useState<any>({});\n  const [date, setDate] = useState(\"\");\n  const profile = useRef(null);\n  useEffect(() => {\n    const fetchUser = async () => {\n      const res = await getUser(user_id);\n      setUser(res);\n      setDate(readableDate(new Date(res.created_at)));\n      setOpen(true);\n      setIcon(<Icon className=\"profileIcon__svg\" icon={profileSVG} />);\n    };\n    fetchUser();\n  }, [user_id]);\n  useClickOutside(profile, setOpen);\n\n  return (\n    <>\n      {open ? (\n        <div\n          className={open ? \"channelInfo\" : \"channelInfo--closed\"}\n          ref={profile}\n        >\n          <div className=\"channelInfo__top\">\n            <div className=\"channelInfo__top__image\">\n              <img\n                className=\"channelInfo__top__image__img\"\n                src={user.profile_image_url}\n                alt=\"profile\"\n              />\n            </div>\n            <div className=\"channelInfo__top__info\">\n              <div className=\"channelInfo__top__info__name\">\n                {user.display_name}\n              </div>\n              <div className=\"channelInfo__top__info__type\">\n                {user.broadcaster_type}\n              </div>\n              <div className=\"channelInfo__top__info__views\">\n                {user.view_count} views\n              </div>\n              <div className=\"channelInfo__top__info__created\">{date}</div>\n            </div>\n          </div>\n          <div className=\"channelInfo__description\">\n            <div className=\"\">{user.description}</div>\n          </div>\n        </div>\n      ) : (\n        <div\n          className={open ? \"profileIcon--closed\" : \"profileIcon\"}\n          onClick={() => setOpen(true)}\n        >\n          {icon}\n        </div>\n      )}\n    </>\n  );\n};\n","import { useEffect } from \"react\";\nexport const useClickOutside = (\n  ref: React.MutableRefObject<any>,\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>\n) => {\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent | TouchEvent) => {\n      if (ref.current && !ref.current.contains(event.target)) {\n        setOpen(false);\n      }\n    };\n    window.addEventListener(\"mousedown\", handleClickOutside);\n    window.addEventListener(\"touchstart\", handleClickOutside);\n    return () => {\n      window.removeEventListener(\"mousedown\", handleClickOutside);\n      window.removeEventListener(\"touchstart\", handleClickOutside);\n    };\n  }, [ref, setOpen]);\n};","import { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ChannelInfo } from \"../../channelInfo/ChannelInfo\";\n\ninterface Props {\n  game_name: string;\n  language: string;\n  thumbnail_url: string;\n  title: string;\n  user_login: string;\n  viewer_count: number;\n  user_id: string;\n}\nexport const TopStream: React.FC<Props> = ({\n  game_name,\n  language,\n  thumbnail_url,\n  title,\n  user_login,\n  viewer_count,\n  user_id,\n}) => {\n  const [profile, setProfile] = useState<any>();\n  const fetchProfile = async () => {\n    if (!profile) {\n      setProfile(<ChannelInfo user_id={user_id} />);\n    }\n  };\n  const url = thumbnail_url\n    .replace(\"{width}\", \"450\")\n    .replace(\"{height}\", \"254\");\n  return (\n    <>\n      <div className=\"topStreamers__stream\">\n        {profile ? profile : \"\"}\n\n        <Link to={`${process.env.PUBLIC_URL}/Streamer/${user_login}`}>\n          <div className=\"topStreamers__stream__thumbnail\">\n            <img\n              className=\"topStreamers__stream__thumbnail__img\"\n              src={url}\n              loading=\"lazy\"\n              alt=\"thumbnail\"\n            />\n            <div className=\"topStreamers__stream__thumbnail__count\">\n              {viewer_count} widzów\n            </div>\n          </div>\n        </Link>\n        <div className=\"topStreamers__stream__info\">\n          <div className=\"topStreamers__stream__info__title\">{title}</div>\n          <div className=\"topStreamers__stream__info__username\">\n            <p\n              onClick={fetchProfile}\n              className=\"topStreamers__stream__info__username__text\"\n            >\n              {user_login}\n            </p>\n          </div>\n          <div className=\"topStreamers__stream__info__game\">{game_name}</div>\n          <div>{language}</div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { getStreamers } from \"../../utils/getStreamers\";\nimport { TopStream } from \"./topStream/TopStream\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { useParams } from \"react-router-dom\";\n\ninterface streamProps {\n  game_name: string;\n  language: string;\n  thumbnail_url: string;\n  title: string;\n  user_login: string;\n  viewer_count: number;\n  user_id: string;\n}\ninterface ParamTypes {\n  GameName: string;\n  GameId: string;\n}\nexport const TopStreamers = () => {\n  console.log(useParams());\n  const { GameName, GameId } = useParams<ParamTypes>();\n  console.log(GameId);\n  console.log(GameName);\n\n  const [cursor, setCursor] = useState(\"\");\n  const [len, setLen] = useState(0);\n  const [topStreamersList, setTopStreamersList] = useState<any>([]);\n  let fetchStreams = async () => {\n    let res = await getStreamers(cursor, GameId);\n    console.log(await res);\n    setCursor(await res.pagination.cursor);\n    let top = await res.data;\n    console.log(\"called specific game streams api\");\n    setLen(len + top.length);\n    setTopStreamersList([\n      ...topStreamersList,\n      top.map((stream: streamProps) => {\n        return (\n          <TopStream\n            key={stream.user_login}\n            game_name={stream.game_name}\n            language={stream.language}\n            thumbnail_url={stream.thumbnail_url}\n            title={stream.title}\n            user_login={stream.user_login}\n            viewer_count={stream.viewer_count}\n            user_id={stream.user_id}\n          />\n        );\n      }),\n    ]);\n  };\n  useEffect(() => {\n    fetchStreams();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return (\n    <>\n      <InfiniteScroll\n        className=\"topStreamers\"\n        dataLength={len}\n        next={fetchStreams}\n        hasMore={true}\n        loader={<h4>Loading...</h4>}\n        endMessage={\n          <p style={{ textAlign: \"center\" }}>\n            <b>Yay! You have seen it all</b>\n          </p>\n        }\n      >\n        {topStreamersList}\n      </InfiniteScroll>\n    </>\n  );\n};\n","import { useState } from \"react\";\nimport { TopGames } from \"../topGames/TopGames\";\nimport { TopStreamers } from \"../topStreamers/TopStreamers\";\n\nexport const Home = () => {\n  const [visibleGames, setVisibleGames] = useState(true);\n  const [, setVisiblePlayers] = useState(false);\n  const handleClickGames = () => {\n    setVisiblePlayers(false);\n    setVisibleGames(true);\n  };\n  const handleClickPlayers = () => {\n    setVisibleGames(false);\n    setVisiblePlayers(true);\n  };\n  return (\n    <div>\n      <div className=\"button\">\n        <div className=\"button__option\" onClick={handleClickGames}>\n          Kategorie\n        </div>\n        <div className=\"button__option\" onClick={handleClickPlayers}>\n          Kanały na żywo\n        </div>\n      </div>\n      {visibleGames ? <TopGames /> : <TopStreamers />}\n    </div>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { getStreamers } from \"../../utils/getStreamers\";\nimport { TopStream } from \"../topStreamers/topStream/TopStream\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { useParams } from \"react-router-dom\";\n\ninterface streamProps {\n  game_name: string;\n  language: string;\n  thumbnail_url: string;\n  title: string;\n  user_login: string;\n  viewer_count: number;\n  user_id: string;\n}\ninterface ParamTypes {\n  GameName: string;\n  GameId: string;\n}\nexport const StreamersForGame = () => {\n  console.log(useParams());\n  const { GameName, GameId } = useParams<ParamTypes>();\n  console.log(GameId);\n  console.log(GameName);\n\n  const [cursor, setCursor] = useState(\"\");\n  const [len, setLen] = useState(0);\n  const [topStreamersList, setTopStreamersList] = useState<any>([]);\n  let fetchStreams = async () => {\n    let res = await getStreamers(cursor, GameId);\n    console.log(await res);\n    setCursor(await res.pagination.cursor);\n    let top = await res.data;\n    console.log(\"called specific game streams api\");\n    setLen(len + top.length);\n    setTopStreamersList([\n      ...topStreamersList,\n      top.map((stream: streamProps) => {\n        return (\n          <TopStream\n            key={stream.user_login}\n            game_name={stream.game_name}\n            language={stream.language}\n            thumbnail_url={stream.thumbnail_url}\n            title={stream.title}\n            user_login={stream.user_login}\n            viewer_count={stream.viewer_count}\n            user_id={stream.user_id}\n          />\n        );\n      }),\n    ]);\n  };\n  useEffect(() => {\n    fetchStreams();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return (\n    <>\n      <div className=\"gameName\">{GameName}</div>\n      <InfiniteScroll\n        className=\"topStreamers\"\n        dataLength={len}\n        next={fetchStreams}\n        hasMore={true}\n        loader={<h4>Loading...</h4>}\n        endMessage={\n          <p style={{ textAlign: \"center\" }}>\n            <b>Yay! You have seen it all</b>\n          </p>\n        }\n      >\n        {topStreamersList}\n      </InfiniteScroll>\n    </>\n  );\n};\n","import { useParams } from \"react-router-dom\";\nimport { TwitchEmbed } from \"react-twitch-embed\";\ninterface ParamTypes {\n  Name: string;\n}\nexport const LiveStream = () => {\n  const { Name } = useParams<ParamTypes>();\n  return (\n    <div className=\"streamWrapper\">\n      <div className=\"twitchEmbed\">\n        <TwitchEmbed\n          id=\"twitchEmbed\"\n          channel={Name}\n          theme=\"dark\"\n          width=\"100%\"\n          height=\"100%\"\n          muted\n          withChat={false}\n          onVideoPause={() => console.log(\":(\")}\n        />\n      </div>\n    </div>\n  );\n};\n","import { Navbar } from \"./navbar/Navbar\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport { Home } from \"./home/Home\";\nimport { StreamersForGame } from \"./streamersForGame/StreamersForGame\";\nimport { LiveStream } from \"./liveStream/LiveStream\";\n\nexport const App = () => {\n  return (\n    <Router>\n      <div>\n        <Navbar />\n        <Switch>\n          <Redirect exact from=\"/\" to={`${process.env.PUBLIC_URL}/`} />\n          <Route path={`${process.env.PUBLIC_URL}/`} exact>\n            <Home />\n          </Route>\n          <Route\n            path={`${process.env.PUBLIC_URL}/StreamersForGame/:GameName/:GameId`}\n          >\n            <StreamersForGame />\n          </Route>\n          <Route path={`${process.env.PUBLIC_URL}/Streamer/:Name`}>\n            <LiveStream />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport {App} from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}