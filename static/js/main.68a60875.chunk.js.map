{"version":3,"sources":["utils/searchCategories.ts","components/navbar/queryResult/categoryItem/CategoryItem.tsx","hooks/useClickOutside.ts","components/navbar/Navbar.tsx","utils/getGames.ts","components/topGames/topGame/TopGame.tsx","components/topGames/TopGames.tsx","utils/getStreamers.ts","utils/getUser.ts","utils/readableDate.ts","components/channelInfo/ChannelInfo.tsx","components/topStreamers/topStream/TopStream.tsx","components/topStreamers/TopStreamers.tsx","components/home/Home.tsx","components/streamersForGame/StreamersForGame.tsx","components/liveStream/LiveStream.tsx","components/App.tsx","index.tsx"],"names":["searchCategories","query","cursor","a","url","fetch","method","headers","Headers","process","Authorization","res","console","log","json","result","CategoryItem","id","name","box_art_url","to","className","src","alt","useClickOutside","ref","setOpen","useEffect","handleClickOutside","event","current","contains","target","window","addEventListener","removeEventListener","Navbar","useState","open","wrapperRef","useRef","setCursor","setQuery","searchResult","setSearchResult","debouncedSearch","useCallback","debounce","data","length","map","val","icon","twitchIcon","onClick","type","placeholder","onChange","e","value","handleChange","htmlFor","searchIcon","getGames","TopGame","replace","loading","TopGames","topGamesList","setTopGamesList","len","setLen","fetchGames","pagination","top","game","dataLength","next","hasMore","loader","endMessage","style","textAlign","getStreamers","gameId","getUser","user_id","readableDate","date","year","getFullYear","month","getMonth","day","getDay","ChannelInfo","setIcon","user","setUser","setDate","profile","Date","created_at","profileSVG","fetchUser","closeSVG","profile_image_url","display_name","broadcaster_type","view_count","description","TopStream","game_name","language","thumbnail_url","title","user_login","viewer_count","setProfile","fetchProfile","TopStreamers","GameId","useParams","topStreamersList","setTopStreamersList","fetchStreams","stream","Home","visibleGames","setVisibleGames","setVisiblePlayers","StreamersForGame","GameName","LiveStream","Name","channel","theme","width","height","muted","withChat","onVideoPause","App","exact","from","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68a60875.chunk.js","sourcesContent":["const clientId = process.env.REACT_APP_CLIENT_ID;\nconst oauthCode = process.env.REACT_APP_OAUTH_CODE;\n\nexport const searchCategories = async (query: string, cursor: string) => {\n  let url = `https://api.twitch.tv/helix/search/categories?query=${query}&first=40`;\n  if (cursor) {\n    url += `&after=${cursor}`;\n  }\n  const res = await fetch(url, {\n    method: \"GET\",\n    headers: new Headers({\n      \"Client-ID\": clientId!,\n      Authorization: `Bearer ${oauthCode}`,\n    }),\n  });\n  console.log(\"search categories\");\n  const result = await res.json();\n  return result;\n};\n","import { useState, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n\ninterface Props {\n  id: string;\n  name: string;\n  box_art_url: string;\n}\nexport const CategoryItem: React.FC<Props> = ({ id, name, box_art_url }) => {\n \n  return (\n    <>\n      <Link to={`${process.env.PUBLIC_URL}/StreamersForGame/${name}/${id}`}>\n        <div className=\"categoryItems__item\">\n          <img\n            className=\"categoryItems__item__img\"\n            src={box_art_url}\n            alt=\"Category\"\n          />\n          <div className=\"categoryItems__item__name\">{name}</div>\n        </div>\n      </Link>\n    </>\n  );\n};\n","import { useEffect } from \"react\";\nexport const useClickOutside = (\n  ref: React.MutableRefObject<any>,\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>\n) => {\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent | TouchEvent) => {\n      if (ref.current && !ref.current.contains(event.target)) {\n        setOpen(false);\n      }\n    };\n    window.addEventListener(\"mousedown\", handleClickOutside);\n    window.addEventListener(\"touchstart\", handleClickOutside);\n    return () => {\n      window.removeEventListener(\"mousedown\", handleClickOutside);\n      window.removeEventListener(\"touchstart\", handleClickOutside);\n    };\n  }, [ref, setOpen]);\n};\n","import { useState, useEffect, useCallback, useRef } from \"react\";\nimport { searchCategories } from \"../../utils/searchCategories\";\nimport { debounce } from \"lodash\";\nimport { Link } from \"react-router-dom\";\nimport { Icon } from \"@iconify/react\";\nimport searchIcon from \"@iconify-icons/akar-icons/search\";\nimport twitchIcon from \"@iconify-icons/bi/twitch\";\nimport { CategoryItem } from \"./queryResult/categoryItem/CategoryItem\";\nimport { useClickOutside } from \"../../hooks/useClickOutside\";\ninterface CategoryItemProps {\n  id: string;\n  name: string;\n  box_art_url: string;\n}\nexport const Navbar = () => {\n  const [open, setOpen] = useState(true);\n  const wrapperRef = useRef(null);\n  useClickOutside(wrapperRef, setOpen);\n  const [cursor, setCursor] = useState(\"\");\n  const [query, setQuery] = useState(\"\");\n  const [searchResult, setSearchResult] = useState<any>(null);\n  useEffect(() => {\n    if (!open) {\n      setSearchResult(null);\n      setQuery(\"\");\n    }\n  }, [open]);\n  useEffect(() => {\n    debouncedSearch(query, cursor);\n  }, [query]);\n  const handleChange = (e: React.ChangeEvent<any>) => {\n    setQuery(e.target.value);\n    if (cursor !== \"\") {\n      setCursor(\"\");\n    }\n  };\n  const debouncedSearch = useCallback(\n    debounce(async (query: string, cursor: string) => {\n      let res = { data: [] };\n      if (query.length > 0) {\n        res = await searchCategories(query, cursor);\n        setSearchResult(\n          <div className={open ? \"categoryItems\" : \"categoryItems--closed\"}>\n            {res.data.map((val: CategoryItemProps) => {\n              return (\n                <CategoryItem\n                  key={val.id}\n                  id={val.id}\n                  name={val.name}\n                  box_art_url={val.box_art_url}\n                />\n              );\n            })}\n          </div>\n        );\n      } else {\n        res = { data: [] };\n        setSearchResult(null);\n      }\n      console.log(res);\n    }, 500),\n    []\n  );\n  return (\n    <div className=\"navbar\">\n      <Link className=\"navbar__twitch\" to={`${process.env.PUBLIC_URL}/`}>\n        <Icon icon={twitchIcon} />\n      </Link>\n      <div className=\"navbar__wrapper\" ref={wrapperRef}>\n        <div\n          className=\"navbar__wrapper__searchDiv\"\n          onClick={() => setOpen(true)}\n        >\n          <input\n            type=\"text\"\n            className=\"navbar__wrapper__searchDiv__search\"\n            placeholder=\"Search\"\n            onChange={(e) => handleChange(e)}\n            value={query}\n            id=\"input\"\n          ></input>\n          <label htmlFor=\"input\">\n            <div className=\"navbar__wrapper__searchDiv__icon\">\n              <Icon\n                icon={searchIcon}\n                className=\"navbar__wrapper__searchDiv__icon__svg\"\n              />\n            </div>\n          </label>\n        </div>\n\n        {searchResult ? searchResult : \"\"}\n      </div>\n    </div>\n  );\n};\n\n// data: Array(36)\n// 0:\n// box_art_url: \"https://static-cdn.jtvnw.net/ttv-boxart/./League%20of%20Legends:%20Wild%20Rift-52x72.jpg\"\n// id: \"514858\"\n// name: \"League of Legends: Wild Rift\"\n","const clientId = process.env.REACT_APP_CLIENT_ID;\nconst oauthCode = process.env.REACT_APP_OAUTH_CODE;\nexport const getGames = async (cursor: string) => {\n  let url = \"https://api.twitch.tv/helix/games/top?first=100\";\n  if (cursor) {\n    url = `${url}&after=${cursor}`;\n  }\n  const res = await fetch(url, {\n    method: \"GET\",\n    headers: new Headers({\n      \"Client-ID\": clientId!,\n      Authorization: `Bearer ${oauthCode}`,\n    }),\n  });\n  const result = await res.json();\n  console.log(result);\n\n  return result;\n};\n","import { Link } from \"react-router-dom\";\ninterface Props {\n  id: string;\n  name: string;\n  box_art_url: string;\n}\nexport const TopGame: React.FC<Props> = ({ id, name, box_art_url }) => {\n  const url = box_art_url.replace(\"{width}\", \"220\").replace(\"{height}\", \"325\");\n  return (\n    <div className=\"topGames__game\">\n      <Link to={`${process.env.PUBLIC_URL}/StreamersForGame/${name}/${id}`}>\n        <img\n          src={url}\n          loading=\"lazy\"\n          alt=\"game\"\n          className=\"topGames__game__img\"\n        />\n      </Link>\n      <div className=\"topGames__game__name\">\n        <Link to={`${process.env.PUBLIC_URL}/StreamersForGame/${name}/${id}`}>\n          <p className=\"topGames__game__name__text\">{name}</p>\n        </Link>\n      </div>\n    </div>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { getGames } from \"../../utils/getGames\";\nimport { TopGame } from \"./topGame/TopGame\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nexport const TopGames = () => {\n  const [topGamesList, setTopGamesList] = useState<any>([]);\n  const [cursor, setCursor] = useState(\"\");\n  const [len, setLen] = useState(0);\n  const fetchGames = async () => {\n    let res = await getGames(cursor);\n    setCursor(await res.pagination.cursor);\n    let top = await res.data;\n    setLen(len + top.length);\n    setTopGamesList([\n      ...topGamesList,\n      top.map((game: { id: string; name: string; box_art_url: string }) => {\n        return (\n          <TopGame\n            key={game.id}\n            id={game.id}\n            name={game.name}\n            box_art_url={game.box_art_url}\n          />\n        );\n      }),\n    ]);\n    return topGamesList;\n  };\n  useEffect(() => {\n    fetchGames();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      <InfiniteScroll\n        className=\"topGames\"\n        dataLength={len}\n        next={fetchGames}\n        hasMore={true}\n        loader={<h4>Loading...</h4>}\n        endMessage={\n          <p style={{ textAlign: \"center\" }}>\n            <b>Yay! You have seen it all</b>\n          </p>\n        }\n      >\n        {topGamesList}\n      </InfiniteScroll>\n    </>\n  );\n};\n","const clientId = process.env.REACT_APP_CLIENT_ID;\nconst oauthCode = process.env.REACT_APP_OAUTH_CODE;\n\nexport const getStreamers = async (cursor: string, gameId?: string) => {\n  let url = \"https://api.twitch.tv/helix/streams?first=40\";\n  if (cursor) {\n    url = \"https://api.twitch.tv/helix/streams?first=70\"\n    url += `&after=${cursor}`;\n  }\n  if (gameId) {\n    url += `&game_id=${gameId}`;\n  }\n  const res = await fetch(url, {\n    method: \"GET\",\n    headers: new Headers({\n      \"Client-ID\": clientId!,\n      Authorization: `Bearer ${oauthCode}`,\n    }),\n  });\n  console.log(\"streamers\")\n  const result = await res.json();\n  return result;\n};\n","const clientId = process.env.REACT_APP_CLIENT_ID;\nconst oauthCode = process.env.REACT_APP_OAUTH_CODE;\n\nexport const getUser = async (user_id: string) => {\n  let url = `https://api.twitch.tv/helix/users?id=${user_id}`;\n  const res = await fetch(url, {\n    method: \"GET\",\n    headers: new Headers({\n      \"Client-ID\": clientId!,\n      Authorization: `Bearer ${oauthCode}`,\n    }),\n  });\n  console.log(\"user\");\n  const result = await res.json();\n  console.log(result.data[0]);\n  return result.data[0];\n};\n","export const readableDate = (date: Date): string => {\n  const monthNames = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n  const year = date.getFullYear();\n  const month = monthNames[date.getMonth()];\n  const day = date.getDay();\n  return `Joined ${day === 0 ? 1 : day} ${month} ${year}`;\n};\n","import { useState, useEffect, useRef } from \"react\";\nimport { getUser } from \"../../utils/getUser\";\nimport { readableDate } from \"../../utils/readableDate\";\nimport { useClickOutside } from \"../../hooks/useClickOutside\";\nimport { Icon } from \"@iconify/react\";\nimport profileSVG from \"@iconify-icons/ant-design/profile-outlined\";\nimport closeSVG from \"@iconify-icons/bi/x-lg\";\n\ninterface Props {\n  user_id: string;\n}\nexport const ChannelInfo: React.FC<Props> = ({ user_id }) => {\n  const [open, setOpen] = useState(false);\n  const [icon, setIcon] = useState<JSX.Element | null>(null);\n  const [user, setUser] = useState<any>({});\n  const [date, setDate] = useState(\"\");\n  const profile = useRef(null);\n  useEffect(() => {\n    const fetchUser = async () => {\n      const res = await getUser(user_id);\n      setUser(res);\n      setDate(readableDate(new Date(res.created_at)));\n      setOpen(true);\n      setIcon(<Icon className=\"profileIcon__svg\" icon={profileSVG} />);\n    };\n    fetchUser();\n  }, [user_id]);\n  useClickOutside(profile, setOpen);\n\n  return (\n    <>\n      {open ? (\n        <div\n          className={open ? \"channelInfo\" : \"channelInfo--closed\"}\n          ref={profile}\n        >\n          <div className=\"channelInfo__close\" onClick={() => setOpen(false)}>\n            <Icon className=\"channelInfo__close__svg\" icon={closeSVG} />\n          </div>\n          <div className=\"channelInfo__top\">\n            <div className=\"channelInfo__top__image\">\n              <img\n                className=\"channelInfo__top__image__img\"\n                src={user.profile_image_url}\n                alt=\"profile\"\n              />\n            </div>\n            <div className=\"channelInfo__top__info\">\n              <div className=\"channelInfo__top__info__name\">\n                {user.display_name}\n              </div>\n              <div className=\"channelInfo__top__info__type\">\n                {user.broadcaster_type}\n              </div>\n              <div className=\"channelInfo__top__info__views\">\n                {user.view_count} views\n              </div>\n              <div className=\"channelInfo__top__info__created\">{date}</div>\n            </div>\n          </div>\n          <div className=\"channelInfo__description\">\n            <div className=\"\">{user.description}</div>\n          </div>\n        </div>\n      ) : (\n        <div\n          className={open ? \"profileIcon--closed\" : \"profileIcon\"}\n          onClick={() => setOpen(true)}\n        >\n          {icon}\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ChannelInfo } from \"../../channelInfo/ChannelInfo\";\n\ninterface Props {\n  game_name: string;\n  language: string;\n  thumbnail_url: string;\n  title: string;\n  user_login: string;\n  viewer_count: number;\n  user_id: string;\n}\nexport const TopStream: React.FC<Props> = ({\n  game_name,\n  language,\n  thumbnail_url,\n  title,\n  user_login,\n  viewer_count,\n  user_id,\n}) => {\n  const [profile, setProfile] = useState<any>();\n  const fetchProfile = async () => {\n    if (!profile) {\n      setProfile(<ChannelInfo user_id={user_id} />);\n    }\n  };\n  const url = thumbnail_url\n    .replace(\"{width}\", \"450\")\n    .replace(\"{height}\", \"254\");\n  return (\n    <>\n      <div className=\"topStreamers__stream\">\n        {profile ? profile : \"\"}\n\n        <Link to={`${process.env.PUBLIC_URL}/Streamer/${user_login}`}>\n          <div className=\"topStreamers__stream__thumbnail\">\n            <img\n              className=\"topStreamers__stream__thumbnail__img\"\n              src={url}\n              loading=\"lazy\"\n              alt=\"thumbnail\"\n            />\n            <div className=\"topStreamers__stream__thumbnail__count\">\n              {viewer_count} widzów\n            </div>\n          </div>\n        </Link>\n        <div className=\"topStreamers__stream__info\">\n          <div className=\"topStreamers__stream__info__title\">{title}</div>\n          <div className=\"topStreamers__stream__info__username\">\n            <p\n              onClick={fetchProfile}\n              className=\"topStreamers__stream__info__username__text\"\n            >\n              {user_login}\n            </p>\n          </div>\n          <div className=\"topStreamers__stream__info__game\">{game_name}</div>\n          <div>{language}</div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { getStreamers } from \"../../utils/getStreamers\";\nimport { TopStream } from \"./topStream/TopStream\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { useParams } from \"react-router-dom\";\n\ninterface streamProps {\n  game_name: string;\n  language: string;\n  thumbnail_url: string;\n  title: string;\n  user_login: string;\n  viewer_count: number;\n  user_id: string;\n}\ninterface ParamTypes {\n  GameName: string;\n  GameId: string;\n}\nexport const TopStreamers = () => {\n  const { GameId } = useParams<ParamTypes>();\n\n  const [cursor, setCursor] = useState(\"\");\n  const [len, setLen] = useState(0);\n  const [topStreamersList, setTopStreamersList] = useState<any>([]);\n  let fetchStreams = async () => {\n    let res = await getStreamers(cursor, GameId);\n    console.log(await res);\n    setCursor(await res.pagination.cursor);\n    let top = await res.data;\n    setLen(len + top.length);\n    setTopStreamersList([\n      ...topStreamersList,\n      top.map((stream: streamProps) => {\n        return (\n          <TopStream\n            key={stream.user_login}\n            game_name={stream.game_name}\n            language={stream.language}\n            thumbnail_url={stream.thumbnail_url}\n            title={stream.title}\n            user_login={stream.user_login}\n            viewer_count={stream.viewer_count}\n            user_id={stream.user_id}\n          />\n        );\n      }),\n    ]);\n  };\n  useEffect(() => {\n    fetchStreams();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return (\n    <>\n      <InfiniteScroll\n        className=\"topStreamers\"\n        dataLength={len}\n        next={fetchStreams}\n        hasMore={true}\n        loader={<h4>Loading...</h4>}\n        endMessage={\n          <p style={{ textAlign: \"center\" }}>\n            <b>Yay! You have seen it all</b>\n          </p>\n        }\n      >\n        {topStreamersList}\n      </InfiniteScroll>\n    </>\n  );\n};\n","import { useState } from \"react\";\nimport { TopGames } from \"../topGames/TopGames\";\nimport { TopStreamers } from \"../topStreamers/TopStreamers\";\n\nexport const Home = () => {\n  const [visibleGames, setVisibleGames] = useState(true);\n  const [, setVisiblePlayers] = useState(false);\n  const handleClickGames = () => {\n    setVisiblePlayers(false);\n    setVisibleGames(true);\n  };\n  const handleClickPlayers = () => {\n    setVisibleGames(false);\n    setVisiblePlayers(true);\n  };\n  return (\n    <div>\n      <div className=\"button\">\n        <div className=\"button__option\" onClick={handleClickGames}>\n          Kategorie\n        </div>\n        <div className=\"button__option\" onClick={handleClickPlayers}>\n          Kanały na żywo\n        </div>\n      </div>\n      {visibleGames ? <TopGames /> : <TopStreamers />}\n    </div>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { getStreamers } from \"../../utils/getStreamers\";\nimport { TopStream } from \"../topStreamers/topStream/TopStream\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { useParams } from \"react-router-dom\";\n\ninterface streamProps {\n  game_name: string;\n  language: string;\n  thumbnail_url: string;\n  title: string;\n  user_login: string;\n  viewer_count: number;\n  user_id: string;\n}\ninterface ParamTypes {\n  GameName: string;\n  GameId: string;\n}\nexport const StreamersForGame = () => {\n  const { GameName, GameId } = useParams<ParamTypes>();\n\n  const [cursor, setCursor] = useState(\"\");\n  const [len, setLen] = useState(0);\n  const [topStreamersList, setTopStreamersList] = useState<any>([]);\n  let fetchStreams = async () => {\n    let res = await getStreamers(cursor, GameId);\n    setCursor(await res.pagination.cursor);\n    let top = await res.data;\n    console.log(\"called specific game streams api\");\n    setLen(len + top.length);\n    setTopStreamersList([\n      ...topStreamersList,\n      top.map((stream: streamProps) => {\n        return (\n          <TopStream\n            key={stream.user_login}\n            game_name={stream.game_name}\n            language={stream.language}\n            thumbnail_url={stream.thumbnail_url}\n            title={stream.title}\n            user_login={stream.user_login}\n            viewer_count={stream.viewer_count}\n            user_id={stream.user_id}\n          />\n        );\n      }),\n    ]);\n  };\n  useEffect(() => {\n    fetchStreams();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return (\n    <>\n      <div className=\"gameName\">{GameName}</div>\n      <InfiniteScroll\n        className=\"topStreamers\"\n        dataLength={len}\n        next={fetchStreams}\n        hasMore={true}\n        loader={<h4>Loading...</h4>}\n        endMessage={\n          <p style={{ textAlign: \"center\" }}>\n            <b>Yay! You have seen it all</b>\n          </p>\n        }\n      >\n        {topStreamersList}\n      </InfiniteScroll>\n    </>\n  );\n};\n","import { useParams } from \"react-router-dom\";\nimport { TwitchEmbed } from \"react-twitch-embed\";\ninterface ParamTypes {\n  Name: string;\n}\nexport const LiveStream = () => {\n  const { Name } = useParams<ParamTypes>();\n  return (\n    <div className=\"streamWrapper\">\n      <div className=\"twitchEmbed\">\n        <TwitchEmbed\n          id=\"twitchEmbed\"\n          channel={Name}\n          theme=\"dark\"\n          width=\"100%\"\n          height=\"100%\"\n          muted\n          withChat={false}\n          onVideoPause={() => console.log(\":(\")}\n        />\n      </div>\n    </div>\n  );\n};\n","import { Navbar } from \"./navbar/Navbar\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport { Home } from \"./home/Home\";\nimport { StreamersForGame } from \"./streamersForGame/StreamersForGame\";\nimport { LiveStream } from \"./liveStream/LiveStream\";\n\nexport const App = () => {\n  return (\n    <Router>\n      <div>\n        <Navbar />\n        <Switch>\n          <Redirect exact from=\"/\" to={`${process.env.PUBLIC_URL}/`} />\n          <Route path={`${process.env.PUBLIC_URL}/`} exact>\n            <Home />\n          </Route>\n          <Route\n            path={`${process.env.PUBLIC_URL}/StreamersForGame/:GameName/:GameId`}\n          >\n            <StreamersForGame />\n          </Route>\n          <Route path={`${process.env.PUBLIC_URL}/Streamer/:Name`}>\n            <LiveStream />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport {App} from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}