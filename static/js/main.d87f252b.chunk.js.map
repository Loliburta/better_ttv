{"version":3,"sources":["components/navbar/Navbar.tsx","utils/getTopGames.ts","components/topGames/topGame/TopGame.tsx","components/topGames/TopGames.tsx","utils/getTopStreamers.ts","components/topStreamers/topStream/TopStream.tsx","components/topStreamers/TopStreamers.tsx","components/App.tsx","index.tsx"],"names":["Navbar","className","type","placeholder","icon","searchIcon","getTopGames","cursor","a","url","fetch","method","headers","Headers","process","Authorization","res","json","result","console","log","TopGame","id","name","box_art_url","replace","src","loading","alt","TopGames","useState","topGamesList","setTopGamesList","setCursor","len","setLen","fetchGames","pagination","data","top","length","map","game","useEffect","dataLength","next","hasMore","loader","endMessage","style","textAlign","getTopStreamers","TopStream","game_name","language","thumbnail_url","title","user_login","viewer_count","TopStreamers","topStreamersList","setTopStreamersList","fetchStreams","stream","App","visibleGames","setVisibleGames","setVisiblePlayers","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d87f252b.chunk.js","sourcesContent":["import { Icon } from \"@iconify/react\";\nimport searchIcon from \"@iconify-icons/akar-icons/search\";\nexport const Navbar = () => {\n  return (\n    <div className=\"navbar\">\n      <input\n        type=\"text\"\n        className=\"navbar__search\"\n        placeholder=\"Search\"\n      ></input>\n      <div className=\"navbar__icon\">\n        <Icon icon={searchIcon} className=\"navbar__icon__svg\" />\n      </div>\n    </div>\n  );\n};\n","const clientId = process.env.REACT_APP_CLIENT_ID;\nconst oauthCode = process.env.REACT_APP_OAUTH_CODE;\nexport const getTopGames = async (cursor: string) => {\n  let url = \"https://api.twitch.tv/helix/games/top?first=100\";\n  if (cursor) {\n    url = `${url}&after=${cursor}`;\n  }\n  const res = await fetch(url, {\n    method: \"GET\",\n    headers: new Headers({\n      \"Client-ID\": clientId!,\n      Authorization: `Bearer ${oauthCode}`,\n    }),\n  });\n  const result = await res.json();\n  console.log(result);\n\n  return result;\n};\n","interface Props {\n  id: string;\n  name: string;\n  box_art_url: string;\n}\nexport const TopGame: React.FC<Props> = ({ id, name, box_art_url }) => {\n  const url = box_art_url.replace(\"{width}\", \"200\").replace(\"{height}\", \"300\");\n  return (\n    <div className=\"topGames__game\">\n      <div>{id}</div>\n      <img\n        src={url}\n        loading=\"lazy\"\n        alt=\"game\"\n        className=\"topGames__game__img\"\n      />\n      <div className=\"topGames__game__name\">{name}</div>\n    </div>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { getTopGames } from \"../../utils/getTopGames\";\nimport { TopGame } from \"./topGame/TopGame\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nexport const TopGames = () => {\n  const [topGamesList, setTopGamesList] = useState<any>([]);\n  const [cursor, setCursor] = useState(\"\");\n  const [len, setLen] = useState(0);\n  const fetchGames = async () => {\n    let res = await getTopGames(cursor);\n    setCursor(await res.pagination.cursor);\n    let top = await res.data;\n    setLen(len + top.length);\n    console.log(\"called games api\");\n    setTopGamesList([\n      ...topGamesList,\n      top.map((game: { id: string; name: string; box_art_url: string }) => {\n        return (\n          <TopGame\n            key={game.id}\n            id={game.id}\n            name={game.name}\n            box_art_url={game.box_art_url}\n          />\n        );\n      }),\n    ]);\n    return topGamesList;\n  };\n  useEffect(() => {\n    fetchGames();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      <InfiniteScroll\n        className=\"topGames\"\n        dataLength={len}\n        next={fetchGames}\n        hasMore={true}\n        loader={<h4>Loading...</h4>}\n        endMessage={\n          <p style={{ textAlign: \"center\" }}>\n            <b>Yay! You have seen it all</b>\n          </p>\n        }\n      >\n        {topGamesList}\n      </InfiniteScroll>\n    </>\n  );\n};\n","const clientId = process.env.REACT_APP_CLIENT_ID;\nconst oauthCode = process.env.REACT_APP_OAUTH_CODE;\n\nexport const getTopStreamers = async (cursor: string) => {\n  let url = \"https://api.twitch.tv/helix/streams?first=70\";\n  if (cursor) {\n    url = `${url}&after=${cursor}`;\n  }\n  const res = await fetch(url, {\n    method: \"GET\",\n    headers: new Headers({\n      \"Client-ID\": clientId!,\n      Authorization: `Bearer ${oauthCode}`,\n    }),\n  });\n  const result = await res.json();\n  return result;\n};\n","interface Props {\n  game_name: string;\n  language: string;\n  thumbnail_url: string;\n  title: string;\n  user_login: string;\n  viewer_count: number;\n}\nexport const TopStream: React.FC<Props> = ({\n  game_name,\n  language,\n  thumbnail_url,\n  title,\n  user_login,\n  viewer_count,\n}) => {\n  const url = thumbnail_url\n    .replace(\"{width}\", \"300\")\n    .replace(\"{height}\", \"200\");\n\n  return (\n    <div className=\"topStreamers__stream\">\n      <div className=\"topStreamers__stream__thumbnail\">\n        <img src={url} loading=\"lazy\" alt=\"thumbnail\" />\n        <div className=\"topStreamers__stream__thumbnail__count\">\n          {viewer_count} widz√≥w\n        </div>\n      </div>\n      <div className=\"topStreamers__stream__info\">\n        <div className=\"topStreamers__stream__info__title\">{title}</div>\n        <div className=\"topStreamers__stream__info__username\">{user_login}</div>\n        <div className=\"topStreamers__stream__info__game\">{game_name}</div>\n        <div>{language}</div>\n      </div>\n    </div>\n  );\n};\n\n// game_id: \"516575\"\n// game_name: \"VALORANT\"\n// id: \"42080503677\"\n// is_mature: false\n// language: \"en\"\n// started_at: \"2021-05-27T14:52:19Z\"\n// tag_ids: [\"6ea6bca4-4712-4ab9-a906-e3336a9d8039\"]\n// thumbnail_url: \"https://static-cdn.jtvnw.net/previews-ttv/live_user_shroud-{width}x{height}.jpg\"\n// title: \"#VCTPartner NA VS KR |    Follow @shroud on socials\"\n// type: \"live\"\n// user_id: \"37402112\"\n// user_login: \"shroud\"\n// user_name: \"shroud\"\n// viewer_count: 164594\n","import { useState, useEffect } from \"react\";\nimport { getTopStreamers } from \"../../utils/getTopStreamers\";\nimport { TopStream } from \"./topStream/TopStream\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\ninterface streamProps {\n  game_name: string;\n  language: string;\n  thumbnail_url: string;\n  title: string;\n  user_login: string;\n  viewer_count: number;\n}\nexport const TopStreamers = () => {\n  const [cursor, setCursor] = useState(\"\");\n  const [len, setLen] = useState(0);\n  const [topStreamersList, setTopStreamersList] = useState<any>([]);\n  let fetchStreams = async () => {\n    let res = await getTopStreamers(cursor);\n    console.log(await res);\n    setCursor(await res.pagination.cursor);\n    let top = await res.data;\n    console.log(\"called streams api\");\n    setLen(len + top.length);\n    setTopStreamersList([\n      ...topStreamersList,\n      top.map((stream: streamProps) => {\n        return (\n          <TopStream\n            key={stream.user_login}\n            game_name={stream.game_name}\n            language={stream.language}\n            thumbnail_url={stream.thumbnail_url}\n            title={stream.title}\n            user_login={stream.user_login}\n            viewer_count={stream.viewer_count}\n          />\n        );\n      }),\n    ]);\n  };\n  useEffect(() => {\n    fetchStreams();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return (\n    <>\n      <InfiniteScroll\n        className=\"topStreamers\"\n        dataLength={len}\n        next={fetchStreams}\n        hasMore={true}\n        loader={<h4>Loading...</h4>}\n        endMessage={\n          <p style={{ textAlign: \"center\" }}>\n            <b>Yay! You have seen it all</b>\n          </p>\n        }\n      >\n        {topStreamersList}\n      </InfiniteScroll>\n    </>\n  );\n};\n","import { useState } from \"react\";\nimport { Navbar } from \"./navbar/Navbar\";\nimport { TopGames } from \"./topGames/TopGames\";\nimport { TopStreamers } from \"./topStreamers/TopStreamers\";\nexport const App = () => {\n  const [visibleGames, setVisibleGames] = useState(true);\n  const [,setVisiblePlayers] = useState(false);\n  const handleClickGames = () => {\n    setVisiblePlayers(false);\n    setVisibleGames(true);\n  };\n  const handleClickPlayers = () => {\n    setVisibleGames(false);\n    setVisiblePlayers(true);\n  };\n\n  return (\n    <div>\n      <Navbar />\n      <div className=\"button\">\n        <div className=\"button__option\" onClick={handleClickGames}>\n          Kategorie\n        </div>\n        <div className=\"button__option\" onClick={handleClickPlayers}>\n          Kana≈Çy na ≈ºywo\n        </div>\n      </div>\n      {visibleGames ? <TopGames /> : <TopStreamers />}\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport {App} from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}