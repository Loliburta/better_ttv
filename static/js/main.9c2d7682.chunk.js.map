{"version":3,"sources":["components/navbar/Navbar.tsx","utils/getGames.ts","components/topGames/topGame/TopGame.tsx","components/topGames/TopGames.tsx","utils/getStreamers.ts","components/topStreamers/topStream/TopStream.tsx","components/topStreamers/TopStreamers.tsx","components/home/Home.tsx","components/streamersForGame/StreamersForGame.tsx","components/App.tsx","index.tsx"],"names":["Navbar","className","type","placeholder","icon","searchIcon","getGames","cursor","a","url","fetch","method","headers","Headers","process","Authorization","res","json","result","console","log","TopGame","id","name","box_art_url","replace","to","src","loading","alt","TopGames","useState","topGamesList","setTopGamesList","setCursor","len","setLen","fetchGames","pagination","data","top","length","map","game","useEffect","dataLength","next","hasMore","loader","endMessage","style","textAlign","getStreamers","gameId","TopStream","game_name","language","thumbnail_url","title","user_login","viewer_count","TopStreamers","topStreamersList","setTopStreamersList","fetchStreams","stream","Home","visibleGames","setVisibleGames","setVisiblePlayers","onClick","StreamersForGame","useParams","GameName","GameId","App","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c2d7682.chunk.js","sourcesContent":["import { Icon } from \"@iconify/react\";\nimport searchIcon from \"@iconify-icons/akar-icons/search\";\nexport const Navbar = () => {\n  return (\n    <div className=\"navbar\">\n      <input\n        type=\"text\"\n        className=\"navbar__search\"\n        placeholder=\"Search\"\n      ></input>\n      <div className=\"navbar__icon\">\n        <Icon icon={searchIcon} className=\"navbar__icon__svg\" />\n      </div>\n    </div>\n  );\n};\n","const clientId = process.env.REACT_APP_CLIENT_ID;\nconst oauthCode = process.env.REACT_APP_OAUTH_CODE;\nexport const getGames = async (cursor: string) => {\n  let url = \"https://api.twitch.tv/helix/games/top?first=100\";\n  if (cursor) {\n    url = `${url}&after=${cursor}`;\n  }\n  const res = await fetch(url, {\n    method: \"GET\",\n    headers: new Headers({\n      \"Client-ID\": clientId!,\n      Authorization: `Bearer ${oauthCode}`,\n    }),\n  });\n  const result = await res.json();\n  console.log(result);\n\n  return result;\n};\n","import { Link } from \"react-router-dom\";\ninterface Props {\n  id: string;\n  name: string;\n  box_art_url: string;\n}\nexport const TopGame: React.FC<Props> = ({ id, name, box_art_url }) => {\n  const url = box_art_url.replace(\"{width}\", \"200\").replace(\"{height}\", \"300\");\n  return (\n    <div className=\"topGames__game\">\n      <div>{id}</div>\n      <Link to={`better_ttv/StreamersForGame/${name}/${id}`}>\n        <img\n          src={url}\n          loading=\"lazy\"\n          alt=\"game\"\n          className=\"topGames__game__img\"\n        />\n      </Link>\n      <div className=\"topGames__game__name\">{name}</div>\n    </div>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { getGames } from \"../../utils/getGames\";\nimport { TopGame } from \"./topGame/TopGame\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nexport const TopGames = () => {\n  const [topGamesList, setTopGamesList] = useState<any>([]);\n  const [cursor, setCursor] = useState(\"\");\n  const [len, setLen] = useState(0);\n  const fetchGames = async () => {\n    let res = await getGames(cursor);\n    setCursor(await res.pagination.cursor);\n    let top = await res.data;\n    setLen(len + top.length);\n    console.log(\"called games api\");\n    setTopGamesList([\n      ...topGamesList,\n      top.map((game: { id: string; name: string; box_art_url: string }) => {\n        return (\n          <TopGame\n            key={game.id}\n            id={game.id}\n            name={game.name}\n            box_art_url={game.box_art_url}\n          />\n        );\n      }),\n    ]);\n    return topGamesList;\n  };\n  useEffect(() => {\n    fetchGames();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      <InfiniteScroll\n        className=\"topGames\"\n        dataLength={len}\n        next={fetchGames}\n        hasMore={true}\n        loader={<h4>Loading...</h4>}\n        endMessage={\n          <p style={{ textAlign: \"center\" }}>\n            <b>Yay! You have seen it all</b>\n          </p>\n        }\n      >\n        {topGamesList}\n      </InfiniteScroll>\n    </>\n  );\n};\n","const clientId = process.env.REACT_APP_CLIENT_ID;\nconst oauthCode = process.env.REACT_APP_OAUTH_CODE;\n\nexport const getStreamers = async (cursor: string, gameId?: string) => {\n  let url = \"https://api.twitch.tv/helix/streams?first=70\";\n  if (cursor) {\n    url += `&after=${cursor}`;\n  }\n  if (gameId) {\n    url += `&game_id=${gameId}`;\n  }\n  const res = await fetch(url, {\n    method: \"GET\",\n    headers: new Headers({\n      \"Client-ID\": clientId!,\n      Authorization: `Bearer ${oauthCode}`,\n    }),\n  });\n  const result = await res.json();\n  return result;\n};\n","interface Props {\n  game_name: string;\n  language: string;\n  thumbnail_url: string;\n  title: string;\n  user_login: string;\n  viewer_count: number;\n}\nexport const TopStream: React.FC<Props> = ({\n  game_name,\n  language,\n  thumbnail_url,\n  title,\n  user_login,\n  viewer_count,\n}) => {\n  const url = thumbnail_url\n    .replace(\"{width}\", \"300\")\n    .replace(\"{height}\", \"200\");\n\n  return (\n    <div className=\"topStreamers__stream\">\n      <div className=\"topStreamers__stream__thumbnail\">\n        <img src={url} loading=\"lazy\" alt=\"thumbnail\" />\n        <div className=\"topStreamers__stream__thumbnail__count\">\n          {viewer_count} widzów\n        </div>\n      </div>\n      <div className=\"topStreamers__stream__info\">\n        <div className=\"topStreamers__stream__info__title\">{title}</div>\n        <div className=\"topStreamers__stream__info__username\">{user_login}</div>\n        <div className=\"topStreamers__stream__info__game\">{game_name}</div>\n        <div>{language}</div>\n      </div>\n    </div>\n  );\n};\n\n// game_id: \"516575\"\n// game_name: \"VALORANT\"\n// id: \"42080503677\"\n// is_mature: false\n// language: \"en\"\n// started_at: \"2021-05-27T14:52:19Z\"\n// tag_ids: [\"6ea6bca4-4712-4ab9-a906-e3336a9d8039\"]\n// thumbnail_url: \"https://static-cdn.jtvnw.net/previews-ttv/live_user_shroud-{width}x{height}.jpg\"\n// title: \"#VCTPartner NA VS KR |    Follow @shroud on socials\"\n// type: \"live\"\n// user_id: \"37402112\"\n// user_login: \"shroud\"\n// user_name: \"shroud\"\n// viewer_count: 164594\n","import { useState, useEffect } from \"react\";\nimport { getStreamers } from \"../../utils/getStreamers\";\nimport { TopStream } from \"./topStream/TopStream\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\ninterface streamProps {\n  game_name: string;\n  language: string;\n  thumbnail_url: string;\n  title: string;\n  user_login: string;\n  viewer_count: number;\n}\nexport const TopStreamers = () => {\n  const [cursor, setCursor] = useState(\"\");\n  const [len, setLen] = useState(0);\n  const [topStreamersList, setTopStreamersList] = useState<any>([]);\n  let fetchStreams = async () => {\n    let res = await getStreamers(cursor);\n    console.log(await res);\n    setCursor(await res.pagination.cursor);\n    let top = await res.data;\n    console.log(\"called streams api\");\n    setLen(len + top.length);\n    setTopStreamersList([\n      ...topStreamersList,\n      top.map((stream: streamProps) => {\n        return (\n          <TopStream\n            key={stream.user_login}\n            game_name={stream.game_name}\n            language={stream.language}\n            thumbnail_url={stream.thumbnail_url}\n            title={stream.title}\n            user_login={stream.user_login}\n            viewer_count={stream.viewer_count}\n          />\n        );\n      }),\n    ]);\n  };\n  useEffect(() => {\n    fetchStreams();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return (\n    <>\n      <InfiniteScroll\n        className=\"topStreamers\"\n        dataLength={len}\n        next={fetchStreams}\n        hasMore={true}\n        loader={<h4>Loading...</h4>}\n        endMessage={\n          <p style={{ textAlign: \"center\" }}>\n            <b>Yay! You have seen it all</b>\n          </p>\n        }\n      >\n        {topStreamersList}\n      </InfiniteScroll>\n    </>\n  );\n};\n","import { useState } from \"react\";\nimport { TopGames } from \"../topGames/TopGames\";\nimport { TopStreamers } from \"../topStreamers/TopStreamers\";\n\nexport const Home = () => {\n  const [visibleGames, setVisibleGames] = useState(true);\n  const [, setVisiblePlayers] = useState(false);\n  const handleClickGames = () => {\n    setVisiblePlayers(false);\n    setVisibleGames(true);\n  };\n  const handleClickPlayers = () => {\n    setVisibleGames(false);\n    setVisiblePlayers(true);\n  };\n  return (\n    <div>\n      <div className=\"button\">\n        <div className=\"button__option\" onClick={handleClickGames}>\n          Kategorie\n        </div>\n        <div className=\"button__option\" onClick={handleClickPlayers}>\n          Kanały na żywo\n        </div>\n      </div>\n      {visibleGames ? <TopGames /> : <TopStreamers />}\n    </div>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { getStreamers } from \"../../utils/getStreamers\";\nimport { TopStream } from \"../topStreamers/topStream/TopStream\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { useParams } from \"react-router-dom\";\n\ninterface streamProps {\n  game_name: string;\n  language: string;\n  thumbnail_url: string;\n  title: string;\n  user_login: string;\n  viewer_count: number;\n}\ninterface ParamTypes {\n  GameName: string;\n  GameId: string;\n}\nexport const StreamersForGame = () => {\n  console.log(useParams());\n  const { GameName, GameId } = useParams<ParamTypes>();\n  console.log(GameId);\n  console.log(GameName);\n\n  const [cursor, setCursor] = useState(\"\");\n  const [len, setLen] = useState(0);\n  const [topStreamersList, setTopStreamersList] = useState<any>([]);\n  let fetchStreams = async () => {\n    let res = await getStreamers(cursor, GameId);\n    console.log(await res);\n    setCursor(await res.pagination.cursor);\n    let top = await res.data;\n    console.log(\"called specific game streams api\");\n    setLen(len + top.length);\n    setTopStreamersList([\n      ...topStreamersList,\n      top.map((stream: streamProps) => {\n        return (\n          <TopStream\n            key={stream.user_login}\n            game_name={stream.game_name}\n            language={stream.language}\n            thumbnail_url={stream.thumbnail_url}\n            title={stream.title}\n            user_login={stream.user_login}\n            viewer_count={stream.viewer_count}\n          />\n        );\n      }),\n    ]);\n  };\n  useEffect(() => {\n    fetchStreams();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return (\n    <>\n      <InfiniteScroll\n        className=\"topStreamers\"\n        dataLength={len}\n        next={fetchStreams}\n        hasMore={true}\n        loader={<h4>Loading...</h4>}\n        endMessage={\n          <p style={{ textAlign: \"center\" }}>\n            <b>Yay! You have seen it all</b>\n          </p>\n        }\n      >\n        {topStreamersList}\n      </InfiniteScroll>\n    </>\n  );\n};\n","import { Navbar } from \"./navbar/Navbar\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Home } from \"./home/Home\";\nimport { StreamersForGame } from \"./streamersForGame/StreamersForGame\";\n\nexport const App = () => {\n  return (\n    <Router>\n      <div>\n        <Navbar />\n        <Switch>\n          <Route path={[\"/\", \"/better_ttv\"]} exact>\n            <Home />\n          </Route>\n          <Route path=\"/better_ttv/StreamersForGame/:GameName/:GameId\">\n            <StreamersForGame />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport {App} from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}