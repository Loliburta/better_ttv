{"version":3,"sources":["utils/getTopGames.ts","components/topGames/topGame/TopGame.tsx","components/topGames/TopGames.tsx","utils/getTopStreamers.ts","components/topStreamers/topStream/TopStream.tsx","components/topStreamers/TopStreamers.tsx","components/App.tsx","index.tsx"],"names":["getTopGames","a","fetch","method","headers","Headers","process","Authorization","res","json","result","data","TopGame","id","name","url","box_art_url","replace","className","src","loading","alt","TopGames","useState","topGames","setTopGames","useEffect","top","map","game","getTopStreamers","TopStream","game_name","language","thumbnail_url","title","user_login","viewer_count","TopStreamers","topStreamersList","setTopStreamersList","console","log","stream","App","visibleGames","setVisibleGames","setVisiblePlayers","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c5d2b24.chunk.js","sourcesContent":["const clientId = process.env.REACT_APP_CLIENT_ID;\nconst oauthCode = process.env.REACT_APP_OAUTH_CODE;\nexport const getTopGames = async () => {\n  const res = await fetch(\"https://api.twitch.tv/helix/games/top?first=50\", {\n    method: \"GET\",\n    headers: new Headers({\n      \"Client-ID\": clientId!,\n      Authorization: `Bearer ${oauthCode}`,\n    }),\n  });\n  const result = await res.json();\n  return result.data;\n};\n","interface Props {\n  id: string;\n  name: string;\n  box_art_url: string;\n}\nexport const TopGame: React.FC<Props> = ({ id, name, box_art_url }) => {\n  const url = box_art_url.replace(\"{width}\", \"200\").replace(\"{height}\", \"300\");\n  return (\n    <div className=\"topGames__game\">\n      <div>{id}</div>\n      <img src={url} loading=\"lazy\" alt=\"game\" className=\"topGames__game__img\" />\n      <div className=\"topGames__game__name\">{name}</div>\n    </div>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { getTopGames } from \"../../utils/getTopGames\";\nimport { TopGame } from \"./topGame/TopGame\";\nexport const TopGames = () => {\n  const [topGames, setTopGames] = useState(<></>);\n  useEffect(() => {\n    (async () => {\n      let top = await getTopGames();\n      setTopGames(\n        top.map((game: { id: string; name: string; box_art_url: string }) => {\n          return (\n            <TopGame\n              key={game.id}\n              id={game.id}\n              name={game.name}\n              box_art_url={game.box_art_url}\n            />\n          );\n        })\n      );\n    })();\n  }, []);\n\n  return <div className=\"topGames\">{topGames}</div>;\n};\n","const clientId = process.env.REACT_APP_CLIENT_ID;\nconst oauthCode = process.env.REACT_APP_OAUTH_CODE;\n\nexport const getTopStreamers = async () => {\n  const res = await fetch(\"https://api.twitch.tv/helix/streams\", {\n    method: \"GET\",\n    headers: new Headers({\n      \"Client-ID\": clientId!,\n      Authorization: `Bearer ${oauthCode}`,\n    }),\n  });\n  const result = await res.json();\n  return result.data;\n};\n","interface Props {\n  game_name: string;\n  language: string;\n  thumbnail_url: string;\n  title: string;\n  user_login: string;\n  viewer_count: number;\n}\nexport const TopStream: React.FC<Props> = ({\n  game_name,\n  language,\n  thumbnail_url,\n  title,\n  user_login,\n  viewer_count,\n}) => {\n  const url = thumbnail_url\n    .replace(\"{width}\", \"300\")\n    .replace(\"{height}\", \"200\");\n\n  return (\n    <div className=\"topStreamers__stream\">\n      <div className=\"topStreamers__stream__thumbnail\">\n        <img src={url} loading=\"lazy\" alt=\"thumbnail\" />\n        <div className=\"topStreamers__stream__thumbnail__count\">\n          {viewer_count} widz√≥w\n        </div>\n      </div>\n      <div className=\"topStreamers__stream__info\">\n        <div className=\"topStreamers__stream__info__title\">{title}</div>\n        <div className=\"topStreamers__stream__info__username\">{user_login}</div>\n        <div className=\"topStreamers__stream__info__game\">{game_name}</div>\n        <div>{language}</div>\n      </div>\n    </div>\n  );\n};\n\n// game_id: \"516575\"\n// game_name: \"VALORANT\"\n// id: \"42080503677\"\n// is_mature: false\n// language: \"en\"\n// started_at: \"2021-05-27T14:52:19Z\"\n// tag_ids: [\"6ea6bca4-4712-4ab9-a906-e3336a9d8039\"]\n// thumbnail_url: \"https://static-cdn.jtvnw.net/previews-ttv/live_user_shroud-{width}x{height}.jpg\"\n// title: \"#VCTPartner NA VS KR |    Follow @shroud on socials\"\n// type: \"live\"\n// user_id: \"37402112\"\n// user_login: \"shroud\"\n// user_name: \"shroud\"\n// viewer_count: 164594\n","import { useState, useEffect } from \"react\";\nimport { getTopStreamers } from \"../../utils/getTopStreamers\";\nimport { TopStream } from \"./topStream/TopStream\";\n\ninterface streamProps {\n  game_name: string;\n  language: string;\n  thumbnail_url: string;\n  title: string;\n  user_login: string;\n  viewer_count: number;\n}\nexport const TopStreamers = () => {\n  const [topStreamersList, setTopStreamersList] = useState([]);\n  useEffect(() => {\n    (async () => {\n      let top = await getTopStreamers();\n      console.log(top);\n      setTopStreamersList(\n        top.map((stream: streamProps) => {\n          return (\n            <TopStream\n              key={stream.user_login}\n              game_name={stream.game_name}\n              language={stream.language}\n              thumbnail_url={stream.thumbnail_url}\n              title={stream.title}\n              user_login={stream.user_login}\n              viewer_count={stream.viewer_count}\n            />\n          );\n        })\n      );\n    })();\n  }, []);\n  return <div className=\"topStreamers\">{topStreamersList}</div>;\n};\n","import { TopGames } from \"./topGames/TopGames\";\nimport { useState } from \"react\";\nimport { TopStreamers } from \"./topStreamers/TopStreamers\";\nexport const App = () => {\n  const [visibleGames, setVisibleGames] = useState(true);\n  const [visiblePlayers, setVisiblePlayers] = useState(false);\n  const handleClickGames = () => {\n    setVisiblePlayers(false);\n    setVisibleGames(true);\n  };\n  const handleClickPlayers = () => {\n    setVisibleGames(false);\n    setVisiblePlayers(true);\n  };\n\n  return (\n    <div>\n      <div className=\"button\">\n        <div className=\"button__option\" onClick={handleClickGames}>\n          Gry\n        </div>\n        <div className=\"button__option\" onClick={handleClickPlayers}>\n          Gracze\n        </div>\n      </div>\n      {visibleGames ? <TopGames /> : <TopStreamers />}\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport {App} from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}